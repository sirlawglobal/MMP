{
  "version": 3,
  "sources": ["../../../app/routes/account.availability.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\account.availability.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\account.availability.tsx\");\n  import.meta.hot.lastModified = \"1751745885008.9187\";\n}\n// REMIX HMR END\n\n// app/routes/account.availability.tsx\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData, useFetcher } from \"@remix-run/react\";\nimport { getSession } from \"~/utils/session.server\";\nimport { connectDB } from \"~/utils/db.server\";\nimport { Availability } from \"~/models/Availability\";\nimport { User } from \"~/models/User\";\nexport async function loader({\n  request\n}) {\n  await connectDB();\n  const session = await getSession(request);\n  const userId = session.get(\"userId\");\n  if (!userId) {\n    return redirect(\"/login\");\n  }\n  const user = await User.findById(userId);\n  if (!user || user.role !== \"mentor\") {\n    return redirect(\"/\");\n  }\n\n  // Get or create availability record\n  let availability = await Availability.findOne({\n    userId\n  });\n  if (!availability) {\n    availability = await Availability.create({\n      userId,\n      ...getDefaultAvailability(),\n      bufferBefore: 15,\n      bufferAfter: 15\n    });\n  }\n  return json({\n    availability\n  });\n}\nexport async function action({\n  request\n}) {\n  await connectDB();\n  const session = await getSession(request);\n  const userId = session.get(\"userId\");\n  if (!userId) {\n    return json({\n      error: \"Not authenticated\"\n    }, {\n      status: 401\n    });\n  }\n  const formData = await request.formData();\n  const availabilityData = JSON.parse(formData.get(\"availability\"));\n  const bufferBefore = parseInt(formData.get(\"bufferBefore\"));\n  const bufferAfter = parseInt(formData.get(\"bufferAfter\"));\n  await Availability.findOneAndUpdate({\n    userId\n  }, {\n    ...availabilityData,\n    bufferBefore,\n    bufferAfter\n  }, {\n    upsert: true\n  });\n  return json({\n    success: true\n  });\n}\nfunction getDefaultAvailability() {\n  return {\n    monday: {\n      enabled: false,\n      startTime: \"09:00\",\n      endTime: \"17:00\"\n    },\n    tuesday: {\n      enabled: false,\n      startTime: \"09:00\",\n      endTime: \"17:00\"\n    },\n    wednesday: {\n      enabled: false,\n      startTime: \"09:00\",\n      endTime: \"17:00\"\n    },\n    thursday: {\n      enabled: false,\n      startTime: \"09:00\",\n      endTime: \"17:00\"\n    },\n    friday: {\n      enabled: false,\n      startTime: \"09:00\",\n      endTime: \"17:00\"\n    },\n    saturday: {\n      enabled: false,\n      startTime: \"09:00\",\n      endTime: \"17:00\"\n    },\n    sunday: {\n      enabled: false,\n      startTime: \"09:00\",\n      endTime: \"17:00\"\n    }\n  };\n}\nexport default function AvailabilitySettings() {\n  _s();\n  const {\n    availability\n  } = useLoaderData();\n  const fetcher = useFetcher();\n  const days = [{\n    id: \"monday\",\n    name: \"Monday\"\n  }, {\n    id: \"tuesday\",\n    name: \"Tuesday\"\n  }, {\n    id: \"wednesday\",\n    name: \"Wednesday\"\n  }, {\n    id: \"thursday\",\n    name: \"Thursday\"\n  }, {\n    id: \"friday\",\n    name: \"Friday\"\n  }, {\n    id: \"saturday\",\n    name: \"Saturday\"\n  }, {\n    id: \"sunday\",\n    name: \"Sunday\"\n  }];\n  return <div className=\"max-w-2xl mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Set Your Availability</h1>\r\n      \r\n      <fetcher.Form method=\"post\">\r\n        <div className=\"space-y-4\">\r\n          {/* Buffer Settings */}\r\n          <div className=\"border rounded-lg p-4\">\r\n            <h2 className=\"font-medium text-lg mb-3\">Meeting Buffer Times</h2>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Before Meetings (minutes)\r\n                </label>\r\n                <input type=\"number\" name=\"bufferBefore\" defaultValue={availability.bufferBefore} min=\"0\" max=\"60\" className=\"w-full p-2 border rounded\" />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  After Meetings (minutes)\r\n                </label>\r\n                <input type=\"number\" name=\"bufferAfter\" defaultValue={availability.bufferAfter} min=\"0\" max=\"60\" className=\"w-full p-2 border rounded\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Daily Availability */}\r\n          {days.map(day => <div key={day.id} className=\"border rounded-lg p-4\">\r\n              <div className=\"flex items-center justify-between mb-3\">\r\n                <label className=\"flex items-center space-x-3\">\r\n                  <input type=\"checkbox\" name={`${day.id}-enabled`} defaultChecked={availability[day.id].enabled} onChange={e => {\n                const newValue = e.target.checked;\n                const availabilityInput = document.querySelector(`input[name=\"availability\"]`);\n                const currentValue = JSON.parse(availabilityInput.value);\n                currentValue[day.id].enabled = newValue;\n                availabilityInput.value = JSON.stringify(currentValue);\n              }} className=\"h-5 w-5 rounded border-gray-300 text-blue-600 focus:ring-blue-500\" />\r\n                  <span className=\"font-medium\">{day.name}</span>\r\n                </label>\r\n              </div>\r\n\r\n              {availability[day.id].enabled && <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Start Time\r\n                    </label>\r\n                    <input type=\"time\" name={`${day.id}-startTime`} defaultValue={availability[day.id].startTime} onChange={e => {\n                const newValue = e.target.value;\n                const availabilityInput = document.querySelector(`input[name=\"availability\"]`);\n                const currentValue = JSON.parse(availabilityInput.value);\n                currentValue[day.id].startTime = newValue;\n                availabilityInput.value = JSON.stringify(currentValue);\n              }} className=\"w-full p-2 border rounded\" />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      End Time\r\n                    </label>\r\n                    <input type=\"time\" name={`${day.id}-endTime`} defaultValue={availability[day.id].endTime} onChange={e => {\n                const newValue = e.target.value;\n                const availabilityInput = document.querySelector(`input[name=\"availability\"]`);\n                const currentValue = JSON.parse(availabilityInput.value);\n                currentValue[day.id].endTime = newValue;\n                availabilityInput.value = JSON.stringify(currentValue);\n              }} className=\"w-full p-2 border rounded\" />\r\n                  </div>\r\n                </div>}\r\n            </div>)}\r\n        </div>\r\n\r\n        <input type=\"hidden\" name=\"availability\" value={JSON.stringify({\n        monday: availability.monday,\n        tuesday: availability.tuesday,\n        wednesday: availability.wednesday,\n        thursday: availability.thursday,\n        friday: availability.friday,\n        saturday: availability.saturday,\n        sunday: availability.sunday\n      })} />\r\n\r\n        <div className=\"mt-6\">\r\n          <button type=\"submit\" disabled={fetcher.state === \"submitting\"} className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-blue-400\">\r\n            {fetcher.state === \"submitting\" ? \"Saving...\" : \"Save Availability\"}\r\n          </button>\r\n          \r\n          {fetcher.data?.success && <p className=\"mt-2 text-green-600\">Availability saved successfully!</p>}\r\n          {fetcher.data?.error && <p className=\"mt-2 text-red-600\">{fetcher.data.error}</p>}\r\n        </div>\r\n      </fetcher.Form>\r\n    </div>;\n}\n_s(AvailabilitySettings, \"tYVaYJ7tDMP7D1wH0FVD9qF2Kuw=\", false, function () {\n  return [useLoaderData, useFetcher];\n});\n_c = AvailabilitySettings;\nvar _c;\n$RefreshReg$(_c, \"AvailabilitySettings\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
