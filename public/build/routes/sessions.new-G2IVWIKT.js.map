{
  "version": 3,
  "sources": ["../../../app/routes/sessions.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\sessions.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\sessions.new.tsx\");\n  import.meta.hot.lastModified = \"1751226703179.3623\";\n}\n// REMIX HMR END\n\n// File: app/routes/sessions.new.tsx\nimport { Form, useLoaderData, useActionData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { getSession } from \"~/utils/session.server\"; // User session management\nimport { createSession } from \"~/utils/sessions.server\"; // Session data management\nimport { getCurrentUser, getUserRole } from \"~/utils/auth.server\";\nimport { connectDB } from \"~/utils/db.server\";\nimport { User } from \"~/models/User\";\nexport const loader = async ({\n  request\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  await connectDB();\n  const user = await getCurrentUser(email);\n  const role = await getUserRole(email);\n  if (!user) return redirect(\"/login\");\n  const mentors = role === \"mentee\" ? await User.find({\n    role: \"mentor\"\n  }, \"name id\") : [];\n  return json({\n    user,\n    role,\n    mentors\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const mentorId = formData.get(\"mentorId\");\n  const date = formData.get(\"date\");\n  const startTime = formData.get(\"startTime\");\n  const endTime = formData.get(\"endTime\");\n  if (!mentorId || !date || !startTime || !endTime) {\n    return json({\n      error: \"All fields are required\"\n    }, {\n      status: 400\n    });\n  }\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  const user = await getCurrentUser(email);\n  if (!user) return redirect(\"/login\");\n  try {\n    const newSession = await createSession({\n      mentorId,\n      menteeId: user.id,\n      date: new Date(date),\n      startTime,\n      endTime\n    });\n    if (!newSession) {\n      return json({\n        error: \"Invalid mentor or scheduling conflict\"\n      }, {\n        status: 400\n      });\n    }\n    return redirect(user.role === \"mentor\" ? \"/sessions\" : \"/my-sessions\");\n  } catch (error) {\n    return json({\n      error: error.message\n    }, {\n      status: 400\n    });\n  }\n};\nexport default function NewSession() {\n  _s();\n  const {\n    user,\n    role,\n    mentors\n  } = useLoaderData();\n  const actionData = useActionData();\n  if (role !== \"mentee\") {\n    return <div>Only mentees can schedule sessions.</div>;\n  }\n  return <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-2xl font-semibold mb-6 text-purple-800\">Schedule a New Session</h1>\r\n      <Form method=\"post\" className=\"bg-white rounded-lg p-6 shadow\">\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700\">Select Mentor</label>\r\n          <select name=\"mentorId\" className=\"w-full p-2 border rounded\">\r\n            {mentors.map(mentor => <option key={mentor.id} value={mentor.id}>{mentor.name}</option>)}\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700\">Date</label>\r\n          <input type=\"date\" name=\"date\" className=\"w-full p-2 border rounded\" required />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700\">Start Time</label>\r\n          <input type=\"time\" name=\"startTime\" className=\"w-full p-2 border rounded\" required />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700\">End Time</label>\r\n          <input type=\"time\" name=\"endTime\" className=\"w-full p-2 border rounded\" required />\r\n        </div>\r\n        {actionData?.error && <p className=\"text-red-600\">{actionData.error}</p>}\r\n        <button type=\"submit\" className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\">\r\n          Schedule Session\r\n        </button>\r\n      </Form>\r\n    </div>;\n}\n_s(NewSession, \"PKwgARwWiGjUtcWpAz+126ow5OM=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = NewSession;\nvar _c;\n$RefreshReg$(_c, \"NewSession\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
