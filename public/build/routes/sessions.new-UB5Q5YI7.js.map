{
  "version": 3,
  "sources": ["../../../app/routes/sessions.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\sessions.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\sessions.new.tsx\");\n  import.meta.hot.lastModified = \"1751739445761.0198\";\n}\n// REMIX HMR END\n\n// app/routes/sessions.new.tsx\nimport { Form, useLoaderData, useActionData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { getSession } from \"~/utils/session.server\";\nimport { createSession } from \"~/utils/sessions.server\";\nimport { getCurrentUser, getUserRole } from \"~/utils/auth.server\";\nimport { connectDB } from \"~/utils/db.server\";\nimport { User } from \"~/models/User\";\nimport { Availability } from \"~/models/Availability\";\nimport { useState } from \"react\";\n\n// Type definitions\n\nexport const loader = async ({\n  request\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  await connectDB();\n  const user = await getCurrentUser(email);\n  const role = await getUserRole(email);\n  if (!user) return redirect(\"/login\");\n  if (role !== \"mentee\") {\n    return redirect(\"/dashboard\");\n  }\n  const mentors = await User.find({\n    role: \"mentor\"\n  }).select(\"name _id\");\n  const mentorsWithAvailability = await Promise.all(mentors.map(async mentor => {\n    const availability = await Availability.findOne({\n      userId: mentor._id\n    });\n    return {\n      id: mentor._id.toString(),\n      name: mentor.name,\n      hasAvailability: !!availability\n    };\n  }));\n  return json({\n    user: {\n      id: user.id.toString(),\n      name: user.name ?? \"\",\n      // fallback if name is undefined\n      email: user.email ?? \"\",\n      role: user.role ?? \"\"\n    },\n    mentors: mentorsWithAvailability\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const mentorId = formData.get(\"mentorId\");\n  const date = formData.get(\"date\");\n  const startTime = formData.get(\"startTime\");\n  const endTime = formData.get(\"endTime\");\n  const agenda = formData.get(\"agenda\");\n  if (!mentorId || !date || !startTime || !endTime || !agenda) {\n    return json({\n      error: \"All fields are required\"\n    }, {\n      status: 400\n    });\n  }\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  const user = await getCurrentUser(email);\n  if (!user) return redirect(\"/login\");\n  try {\n    await createSession({\n      mentorId,\n      menteeId: user.id.toString(),\n      date: new Date(date),\n      startTime,\n      endTime,\n      agenda\n    });\n    return redirect(\"/my-sessions\");\n  } catch (error) {\n    return json({\n      error: error.message\n    }, {\n      status: 400\n    });\n  }\n};\nexport default function NewSession() {\n  _s();\n  const {\n    user,\n    mentors\n  } = useLoaderData();\n  const actionData = useActionData();\n  const [selectedMentor, setSelectedMentor] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleMentorChange = e => {\n    setSelectedMentor(e.target.value);\n    setSelectedDate(\"\");\n    setAvailableSlots([]);\n  };\n  const handleDateChange = async e => {\n    const date = e.target.value;\n    setSelectedDate(date);\n    if (selectedMentor && date) {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`/api/available-slots?mentorId=${selectedMentor}&date=${date}`);\n        const slots = await response.json();\n        setAvailableSlots(slots);\n      } catch (error) {\n        console.error(\"Failed to fetch available slots:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  return <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-2xl font-semibold mb-6\">Schedule New Session</h1>\r\n      \r\n      <Form method=\"post\" className=\"bg-white rounded-lg p-6 shadow\">\r\n        {actionData?.error && <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">\r\n            {actionData.error}\r\n          </div>}\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Select Mentor\r\n          </label>\r\n          <select name=\"mentorId\" className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500\" value={selectedMentor} onChange={handleMentorChange} required>\r\n            <option value=\"\">-- Select a Mentor --</option>\r\n            {mentors.map(mentor => <option key={mentor.id} value={mentor.id}>\r\n                {mentor.name} {mentor.hasAvailability ? \"\" : \"(No availability set)\"}\r\n              </option>)}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Date\r\n          </label>\r\n          <input type=\"date\" name=\"date\" className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500\" value={selectedDate} onChange={handleDateChange} min={new Date().toISOString().split('T')[0]} required disabled={!selectedMentor} />\r\n        </div>\r\n\r\n        {isLoading ? <div className=\"mb-4 p-4 text-center text-gray-500\">\r\n            Loading available time slots...\r\n          </div> : availableSlots.length > 0 ? <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Available Time Slots\r\n            </label>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n              {availableSlots.map((slot, index) => <label key={index} className=\"flex items-center p-3 border border-gray-200 rounded-md hover:bg-gray-50 cursor-pointer\">\r\n                  <input type=\"radio\" name=\"startTime\" value={slot.startTime} required className=\"h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300\" />\r\n                  <span className=\"ml-2 block text-sm text-gray-700\">\r\n                    {formatTime(slot.startTime)} - {formatTime(slot.endTime)}\r\n                  </span>\r\n                  <input type=\"hidden\" name=\"endTime\" value={slot.endTime} />\r\n                </label>)}\r\n            </div>\r\n          </div> : selectedDate ? <div className=\"mb-4 p-2 bg-yellow-50 text-yellow-700 rounded text-sm\">\r\n            No available time slots for this date\r\n          </div> : null}\r\n\r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Agenda\r\n          </label>\r\n          <textarea name=\"agenda\" className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500\" rows={4} placeholder=\"What would you like to discuss in this session?\" required />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"w-full bg-purple-600 text-white py-2 px-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50\" disabled={availableSlots.length === 0}>\r\n          Schedule Session\r\n        </button>\r\n      </Form>\r\n    </div>;\n}\n\n// Helper function to format time (HH:MM to 12-hour format)\n_s(NewSession, \"xUW2ZN2hsVfflMHNf8e2yp8TX/A=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = NewSession;\nfunction formatTime(timeString) {\n  const [hours, minutes] = timeString.split(':');\n  const hourNum = parseInt(hours, 10);\n  const ampm = hourNum >= 12 ? 'PM' : 'AM';\n  const displayHour = hourNum % 12 || 12;\n  return `${displayHour}:${minutes} ${ampm}`;\n}\nvar _c;\n$RefreshReg$(_c, \"NewSession\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
