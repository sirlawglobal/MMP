{
  "version": 3,
  "sources": ["../../../app/routes/sessions.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\sessions.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\sessions.tsx\");\n  import.meta.hot.lastModified = \"1751734375070.5046\";\n}\n// REMIX HMR END\n\n// app/routes/sessions.tsx\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { getSession } from \"~/utils/session.server\";\nimport { getSessionsForUser } from \"~/utils/sessions.server\";\nimport { getUserRole, getCurrentUser } from \"~/utils/auth.server\";\nexport const loader = async ({\n  request\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  const user = await getCurrentUser(email);\n  const role = await getUserRole(email);\n  if (!user) return redirect(\"/login\");\n  const sessions = await getSessionsForUser(user.id, role, \"upcoming\");\n  return json({\n    sessions\n  });\n};\nexport default function SessionsPage() {\n  _s();\n  const {\n    sessions\n  } = useLoaderData();\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\"\n    });\n  };\n  return <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-2xl font-semibold mb-6\">Your Sessions</h1>\r\n      \r\n      {sessions.length === 0 ? <div className=\"bg-white rounded-lg p-6 shadow text-center py-8\">\r\n          <p className=\"text-gray-600\">No upcoming sessions scheduled.</p>\r\n        </div> : <div className=\"bg-white rounded-lg p-6 shadow\">\r\n          {sessions.map(session => <div key={session.id} className=\"border-b border-gray-100 py-4 last:border-0\">\r\n              <div className=\"flex justify-between items-start\">\r\n                <div>\r\n                  <h3 className=\"font-medium\">\r\n                    With {session.mentor.name} (Mentor)\r\n                  </h3>\r\n                  <p className=\"text-gray-600\">\r\n                    {formatDate(session.date.toString())}, {session.startTime}-{session.endTime}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <Link to={`/sessions/${session.id}`} className=\"text-blue-600 hover:underline\">\r\n                    Details\r\n                  </Link>\r\n                  <Link to={`/sessions/${session.id}/cancel`} className=\"text-red-600 hover:underline\">\r\n                    Cancel\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>)}\r\n        </div>}\r\n    </div>;\n}\n_s(SessionsPage, \"SAsSlLElM08PXSB8XjDlMx5GjTU=\", false, function () {\n  return [useLoaderData];\n});\n_c = SessionsPage;\nvar _c;\n$RefreshReg$(_c, \"SessionsPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAA+B;AAE/B,qBAA2B;AAC3B,sBAAmC;AACnC,kBAA4C;AA6BtC;AAtDN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oCAAsC,EAAE;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAuBe,SAAR,eAAgC;AACrC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,aAAa,gBAAc;AAC/B,UAAM,OAAO,IAAI,KAAK,UAAU;AAChC,WAAO,KAAK,mBAAmB,SAAS;AAAA,MACtC,SAAS;AAAA,MACT,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AACA,SAAO,mDAAC,SAAI,WAAU,+BAClB;AAAA,uDAAC,QAAG,WAAU,+BAA8B,6BAA5C;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,IAExD,SAAS,WAAW,IAAI,mDAAC,SAAI,WAAU,mDACpC,6DAAC,OAAE,WAAU,iBAAgB,+CAA7B;AAAA;AAAA;AAAA;AAAA,WAA4D,KADvC;AAAA;AAAA;AAAA;AAAA,WAEvB,IAAS,mDAAC,SAAI,WAAU,kCACrB,mBAAS,IAAI,aAAW,mDAAC,SAAqB,WAAU,+CACrD,6DAAC,SAAI,WAAU,oCACb;AAAA,yDAAC,SACC;AAAA,2DAAC,QAAG,WAAU,eAAc;AAAA;AAAA,UACpB,QAAQ,OAAO;AAAA,UAAK;AAAA,aAD5B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,OAAE,WAAU,iBACV;AAAA,qBAAW,QAAQ,KAAK,SAAS,CAAC;AAAA,UAAE;AAAA,UAAG,QAAQ;AAAA,UAAU;AAAA,UAAE,QAAQ;AAAA,aADtE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MACA,mDAAC,SAAI,WAAU,cACb;AAAA,2DAAC,QAAK,IAAI,aAAa,QAAQ,MAAM,WAAU,iCAAgC,uBAA/E;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAK,IAAI,aAAa,QAAQ,aAAa,WAAU,gCAA+B,sBAArF;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,WAiBA,KAlB+B,QAAQ,IAAlB;AAAA;AAAA;AAAA;AAAA,WAmBvB,CAAM,KApBD;AAAA;AAAA;AAAA;AAAA,WAqBT;AAAA,OA1BC;AAAA;AAAA;AAAA;AAAA,SA2BL;AACJ;AACA,GAAG,cAAc,gCAAgC,OAAO,WAAY;AAClE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
