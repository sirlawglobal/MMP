{
  "version": 3,
  "sources": ["../../../app/routes/profile.edit.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\profile.edit.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\profile.edit.tsx\");\n  import.meta.hot.lastModified = \"1750989555079.861\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, useActionData } from \"@remix-run/react\";\nimport { getSession } from \"~/utils/session.server\";\nimport { getCurrentUser, updateUserProfile } from \"~/utils/auth.server\";\nexport const loader = async ({\n  request\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  const user = await getCurrentUser(email);\n  if (!user) return redirect(\"/login\");\n  return json({\n    user\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n  const bio = formData.get(\"bio\");\n  const skills = formData.get(\"skills\").split(\",\").map(s => s.trim());\n  const goals = formData.get(\"goals\").split(\",\").map(g => g.trim());\n  const updatedUser = await updateUserProfile(email, {\n    name,\n    bio,\n    skills,\n    goals\n  });\n  if (!updatedUser) {\n    return json({\n      error: \"Profile update failed.\"\n    }, {\n      status: 500\n    });\n  }\n  return json({\n    success: true\n  });\n};\nexport default function EditProfile() {\n  _s();\n  const {\n    user\n  } = useLoaderData();\n  const actionData = useActionData();\n  return (\n    // <div className=\"max-w-xl mx-auto mt-10 bg-white p-6 rounded shadow\">\n    <div className=\"flex justify-center\">\r\n  <div className=\"bg-white p-8 rounded-xl shadow-lg w-full max-w-2xl\">\r\n    <h1 className=\"text-3xl font-bold text-purple-800 mb-8 text-center\">Edit Profile</h1>\r\n\r\n    <Form method=\"post\" className=\"space-y-6\">\r\n      {/* Name */}\r\n      <div className=\"relative\">\r\n        <input name=\"name\" defaultValue={user.name} required className=\"peer w-full border-b-2 border-gray-300 text-gray-900 placeholder-transparent focus:outline-none focus:border-purple-600 transition\" placeholder=\"Name\" />\r\n        <label className=\"absolute left-0 top-1 text-gray-500 text-sm transition-all peer-placeholder-shown:top-3.5 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-1 peer-focus:text-sm peer-focus:text-purple-600\">\r\n          Name\r\n        </label>\r\n      </div>\r\n\r\n      {/* Bio */}\r\n      <div className=\"relative\">\r\n        <textarea name=\"bio\" rows={3} defaultValue={user.bio} placeholder=\"Bio\" className=\"peer w-full border-b-2 border-gray-300 text-gray-900 placeholder-transparent focus:outline-none focus:border-purple-600 transition resize-none\" />\r\n        <label className=\"absolute left-0 top-1 text-gray-500 text-sm transition-all peer-placeholder-shown:top-3.5 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-1 peer-focus:text-sm peer-focus:text-purple-600\">\r\n          Bio\r\n        </label>\r\n      </div>\r\n\r\n      {/* Skills */}\r\n      <div className=\"relative\">\r\n        <input name=\"skills\" defaultValue={user.skills?.join(\", \")} placeholder=\"e.g. React, Node.js, MongoDB\" className=\"peer w-full border-b-2 border-gray-300 text-gray-900 placeholder-transparent focus:outline-none focus:border-purple-600 transition\" />\r\n        <label className=\"absolute left-0 top-1 text-gray-500 text-sm transition-all peer-placeholder-shown:top-3.5 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-1 peer-focus:text-sm peer-focus:text-purple-600\">\r\n          Skills (comma-separated)\r\n        </label>\r\n      </div>\r\n\r\n      {/* Goals */}\r\n      <div className=\"relative\">\r\n        <input name=\"goals\" defaultValue={user.goals?.join(\", \")} placeholder=\"e.g. Learn TypeScript, Improve UI Design\" className=\"peer w-full border-b-2 border-gray-300 text-gray-900 placeholder-transparent focus:outline-none focus:border-purple-600 transition\" />\r\n        <label className=\"absolute left-0 top-1 text-gray-500 text-sm transition-all peer-placeholder-shown:top-3.5 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-1 peer-focus:text-sm peer-focus:text-purple-600\">\r\n          Goals (comma-separated)\r\n        </label>\r\n      </div>\r\n\r\n      {/* Button */}\r\n      <button type=\"submit\" className=\"w-full py-2 bg-purple-700 hover:bg-purple-800 text-white rounded-md transition\">\r\n        Save Changes\r\n      </button>\r\n\r\n      {/* Alerts */}\r\n      {actionData?.success && <p className=\"text-green-600 text-sm text-center\">Profile updated successfully!</p>}\r\n      {actionData?.error && <p className=\"text-red-600 text-sm text-center\">{actionData.error}</p>}\r\n    </Form>\r\n  </div>\r\n    </div>\n  );\n}\n_s(EditProfile, \"XgBh3bAPUSBzbv3LvmQayqe+1zE=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
