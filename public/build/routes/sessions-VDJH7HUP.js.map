{
  "version": 3,
  "sources": ["../../../app/routes/sessions.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\sessions.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\sessions.tsx\");\n  import.meta.hot.lastModified = \"1751226060995.4153\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { getSession } from \"~/utils/session.server\"; // User session management\nimport { getSessionsForUser } from \"~/utils/sessions.server\"; // Session data management\nimport { getUserRole, getCurrentUser } from \"~/utils/auth.server\";\nexport const loader = async ({\n  request\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  const user = await getCurrentUser(email);\n  const role = await getUserRole(email);\n  if (!user) return redirect(\"/login\");\n  if (role !== \"mentor\") {\n    return redirect(\"/dashboard\"); // Only mentors should access /sessions\n  }\n  const sessions = await getSessionsForUser(user.id, role);\n  return json({\n    user,\n    role,\n    sessions\n  });\n};\nexport default function Sessions() {\n  _s();\n  const {\n    user,\n    role,\n    sessions\n  } = useLoaderData();\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\"\n    });\n  };\n  return <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-2xl font-semibold mb-6 text-purple-800\">Your Sessions</h1>\r\n      <div className=\"bg-white rounded-lg p-6 shadow\">\r\n        {sessions.length === 0 ? <div className=\"text-center py-8\">\r\n            <p className=\"text-gray-600\">No sessions scheduled yet.</p>\r\n          </div> : <div className=\"space-y-4\">\r\n            {sessions.map(session => <div key={session.id} className=\"border-b border-gray-100 pb-4 last:border-0\">\r\n                <div className=\"flex justify-between items-start\">\r\n                  <div>\r\n                    <h3 className=\"font-medium text-gray-800\">With {session.mentee.name}</h3>\r\n                    <p className=\"text-gray-600\">\r\n                      {formatDate(session.date.toString())}, {session.startTime}-{session.endTime}\r\n                    </p>\r\n                    <span className={`inline-block mt-1 px-2 py-1 text-xs rounded ${session.status === \"upcoming\" ? \"bg-blue-100 text-blue-800\" : session.status === \"completed\" ? \"bg-green-100 text-green-800\" : \"bg-gray-100 text-gray-800\"}`}>\r\n                      {session.status.charAt(0).toUpperCase() + session.status.slice(1)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex space-x-2\">\r\n                    {session.status === \"upcoming\" && <Link to={`/sessions/${session.id}/cancel`} className=\"text-red-600 text-sm hover:underline\">\r\n                        Cancel\r\n                      </Link>}\r\n                    <Link to={`/sessions/${session.id}`} className=\"text-blue-600 text-sm hover:underline\">\r\n                      Details\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>)}\r\n          </div>}\r\n      </div>\r\n    </div>;\n}\n_s(Sessions, \"8sddV0WsxSOR4tEP47YL6QbD0EE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Sessions;\nvar _c;\n$RefreshReg$(_c, \"Sessions\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
