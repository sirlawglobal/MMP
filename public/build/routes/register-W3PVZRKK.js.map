{
  "version": 3,
  "sources": ["../../../app/routes/register.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\register.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\register.tsx\");\n  import.meta.hot.lastModified = \"1750965227006.3364\";\n}\n// REMIX HMR END\n\n// app/routes/register.tsx\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { registerUser } from \"~/utils/auth.server\";\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const role = formData.get(\"role\");\n  if (!email || !password || !role) {\n    return json({\n      error: \"All fields are required\"\n    }, {\n      status: 400\n    });\n  }\n  const user = await registerUser(email, password, role);\n  if (!user) {\n    return json({\n      error: \"User already exists or registration failed\"\n    }, {\n      status: 400\n    });\n  }\n  return redirect(\"/login\");\n}\nexport default function RegisterPage() {\n  _s();\n  const actionData = useActionData();\n  return <div className=\"min-h-screen flex items-center justify-center bg-gray-100 px-4\">\r\n      <div className=\"w-full max-w-md bg-white p-8 rounded shadow\">\r\n        <h1 className=\"text-2xl font-bold mb-6 text-center\">Register</h1>\r\n        <Form method=\"post\" className=\"space-y-5\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Email</label>\r\n            <input name=\"email\" type=\"email\" placeholder=\"Email\" required className=\"w-full px-4 py-2 border rounded focus:outline-none focus:ring focus:border-blue-400\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Password</label>\r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required className=\"w-full px-4 py-2 border rounded focus:outline-none focus:ring focus:border-blue-400\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Role</label>\r\n            <select name=\"role\" required className=\"w-full px-4 py-2 border rounded bg-white focus:outline-none focus:ring focus:border-blue-400\">\r\n              <option value=\"\">Select role</option>\r\n              <option value=\"mentee\">Mentee</option>\r\n              <option value=\"mentor\">Mentor</option>\r\n            </select>\r\n          </div>\r\n\r\n          {actionData?.error && <p className=\"text-red-500 text-sm\">{actionData.error}</p>}\r\n\r\n          <button type=\"submit\" className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition\">\r\n            Register\r\n          </button>\r\n        </Form>\r\n        <p className=\"mt-4 text-center text-sm\">\r\n          Already have an account?{\" \"}\r\n          <a href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n            Login here\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>;\n}\n_s(RegisterPage, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
