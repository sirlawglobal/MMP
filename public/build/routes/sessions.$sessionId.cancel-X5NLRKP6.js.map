{
  "version": 3,
  "sources": ["../../../app/routes/sessions.$sessionId.cancel.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\sessions.$sessionId.cancel.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\sessions.$sessionId.cancel.tsx\");\n  import.meta.hot.lastModified = \"1751226562576.0603\";\n}\n// REMIX HMR END\n\nimport { redirect } from \"@remix-run/node\";\nimport { Form } from \"@remix-run/react\";\nimport { getSession } from \"~/utils/session.server\"; // User session management\nimport { getCurrentUser } from \"~/utils/auth.server\";\nimport { connectDB } from \"~/utils/db.server\";\nimport { Session } from \"~/models/Session\";\nexport const action = async ({\n  request,\n  params\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  const user = await getCurrentUser(email);\n  if (!user) return redirect(\"/login\");\n  await connectDB();\n  const sessionData = await Session.findById(params.sessionId);\n  if (!sessionData) {\n    throw new Response(\"Session not found\", {\n      status: 404\n    });\n  }\n\n  // Only allow mentor or mentee to cancel\n  if (sessionData.mentor.toString() !== user.id && sessionData.mentee.toString() !== user.id) {\n    throw new Response(\"Unauthorized\", {\n      status: 403\n    });\n  }\n  await Session.findByIdAndUpdate(params.sessionId, {\n    status: \"cancelled\"\n  });\n  return redirect(user.role === \"mentor\" ? \"/sessions\" : \"/my-sessions\");\n};\nexport default function CancelSession() {\n  return <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-2xl font-semibold mb-6 text-purple-800\">Cancel Session</h1>\r\n      <div className=\"bg-white rounded-lg p-6 shadow\">\r\n        <p className=\"text-gray-600 mb-4\">Are you sure you want to cancel this session?</p>\r\n        <Form method=\"post\">\r\n          <button type=\"submit\" className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\">\r\n            Confirm Cancel\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </div>;\n}\n_c = CancelSession;\nvar _c;\n$RefreshReg$(_c, \"CancelSession\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,kBAAyB;AAEzB,qBAA2B;AAC3B,kBAA+B;AAC/B,gBAA0B;AAgCpB;AAvDN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sDAAwD,EAAE;AAAA,EACnG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6C;AAC7C,cAAY,IAAI,eAAe;AACjC;AAqCe,SAAR,gBAAiC;AACtC,SAAO,mDAAC,SAAI,WAAU,+BAClB;AAAA,uDAAC,QAAG,WAAU,+CAA8C,8BAA5D;AAAA;AAAA;AAAA;AAAA,WAA0E;AAAA,IAC1E,mDAAC,SAAI,WAAU,kCACb;AAAA,yDAAC,OAAE,WAAU,sBAAqB,6DAAlC;AAAA;AAAA;AAAA;AAAA,aAA+E;AAAA,MAC/E,mDAAC,QAAK,QAAO,QACX,6DAAC,YAAO,MAAK,UAAS,WAAU,4DAA2D,8BAA3F;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OATG;AAAA;AAAA;AAAA;AAAA,SAUL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
