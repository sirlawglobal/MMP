{
  "version": 3,
  "sources": ["../../../app/routes/sessions.$sessionId.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\sessions.$sessionId.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\sessions.$sessionId.tsx\");\n  import.meta.hot.lastModified = \"1751226531346.9983\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getSession } from \"~/utils/session.server\"; // User session management\nimport { getCurrentUser } from \"~/utils/auth.server\";\nimport { connectDB } from \"~/utils/db.server\";\nimport { Session } from \"~/models/Session\";\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  const user = await getCurrentUser(email);\n  if (!user) return redirect(\"/login\");\n  await connectDB();\n  const sessionData = await Session.findById(params.sessionId).populate(\"mentor\", \"name\").populate(\"mentee\", \"name\");\n  if (!sessionData) {\n    throw new Response(\"Session not found\", {\n      status: 404\n    });\n  }\n\n  // Ensure user is mentor, mentee, or admin\n  if (sessionData.mentor._id.toString() !== user.id && sessionData.mentee._id.toString() !== user.id && user.role !== \"admin\") {\n    throw new Response(\"Unauthorized\", {\n      status: 403\n    });\n  }\n  return json({\n    session: {\n      id: sessionData._id.toString(),\n      mentor: {\n        id: sessionData.mentor._id.toString(),\n        name: sessionData.mentor.name\n      },\n      mentee: {\n        id: sessionData.mentee._id.toString(),\n        name: sessionData.mentee.name\n      },\n      date: sessionData.date,\n      startTime: sessionData.startTime,\n      endTime: sessionData.endTime,\n      status: sessionData.status,\n      feedback: sessionData.feedback\n    }\n  });\n};\nexport default function SessionDetails() {\n  _s();\n  const {\n    session\n  } = useLoaderData();\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\"\n    });\n  };\n  return <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-2xl font-semibold mb-6 text-purple-800\">Session Details</h1>\r\n      <div className=\"bg-white rounded-lg p-6 shadow\">\r\n        <h2 className=\"text-lg font-medium mb-4\">\r\n          Session with {session.mentor.name} and {session.mentee.name}\r\n        </h2>\r\n        <p className=\"text-gray-600\">Date: {formatDate(session.date.toString())}</p>\r\n        <p className=\"text-gray-600\">Time: {session.startTime} - {session.endTime}</p>\r\n        <p className=\"text-gray-600\">\r\n          Status: {session.status.charAt(0).toUpperCase() + session.status.slice(1)}\r\n        </p>\r\n        {session.feedback && <div className=\"mt-4\">\r\n            <p className=\"text-gray-600\">Feedback Rating: {session.feedback.rating || \"N/A\"}</p>\r\n            <p className=\"text-gray-600\">Feedback Comment: {session.feedback.comment || \"N/A\"}</p>\r\n          </div>}\r\n      </div>\r\n    </div>;\n}\n_s(SessionDetails, \"EOfQd6wf1EWnvALdPsGqAqhihYQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = SessionDetails;\nvar _c;\n$RefreshReg$(_c, \"SessionDetails\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAE/B,qBAA2B;AAC3B,kBAA+B;AAC/B,gBAA0B;AA0DpB;AAlFN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+CAAiD,EAAE;AAAA,EAC5F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsC;AACtC,cAAY,IAAI,eAAe;AACjC;AAmDe,SAAR,iBAAkC;AACvC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,aAAa,gBAAc;AAC/B,UAAM,OAAO,IAAI,KAAK,UAAU;AAChC,WAAO,KAAK,mBAAmB,SAAS;AAAA,MACtC,SAAS;AAAA,MACT,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AACA,SAAO,mDAAC,SAAI,WAAU,+BAClB;AAAA,uDAAC,QAAG,WAAU,+CAA8C,+BAA5D;AAAA;AAAA;AAAA;AAAA,WAA2E;AAAA,IAC3E,mDAAC,SAAI,WAAU,kCACb;AAAA,yDAAC,QAAG,WAAU,4BAA2B;AAAA;AAAA,QACzB,QAAQ,OAAO;AAAA,QAAK;AAAA,QAAM,QAAQ,OAAO;AAAA,WADzD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,OAAE,WAAU,iBAAgB;AAAA;AAAA,QAAO,WAAW,QAAQ,KAAK,SAAS,CAAC;AAAA,WAAtE;AAAA;AAAA;AAAA;AAAA,aAAwE;AAAA,MACxE,mDAAC,OAAE,WAAU,iBAAgB;AAAA;AAAA,QAAO,QAAQ;AAAA,QAAU;AAAA,QAAI,QAAQ;AAAA,WAAlE;AAAA;AAAA;AAAA;AAAA,aAA0E;AAAA,MAC1E,mDAAC,OAAE,WAAU,iBAAgB;AAAA;AAAA,QAClB,QAAQ,OAAO,OAAO,CAAC,EAAE,YAAY,IAAI,QAAQ,OAAO,MAAM,CAAC;AAAA,WAD1E;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACC,QAAQ,YAAY,mDAAC,SAAI,WAAU,QAChC;AAAA,2DAAC,OAAE,WAAU,iBAAgB;AAAA;AAAA,UAAkB,QAAQ,SAAS,UAAU;AAAA,aAA1E;AAAA;AAAA;AAAA;AAAA,eAAgF;AAAA,QAChF,mDAAC,OAAE,WAAU,iBAAgB;AAAA;AAAA,UAAmB,QAAQ,SAAS,WAAW;AAAA,aAA5E;AAAA;AAAA;AAAA;AAAA,eAAkF;AAAA,WAFjE;AAAA;AAAA;AAAA;AAAA,aAGnB;AAAA,SAZJ;AAAA;AAAA;AAAA;AAAA,WAaA;AAAA,OAfG;AAAA;AAAA;AAAA;AAAA,SAgBL;AACJ;AACA,GAAG,gBAAgB,gCAAgC,OAAO,WAAY;AACpE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
