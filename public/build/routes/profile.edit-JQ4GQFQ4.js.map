{
  "version": 3,
  "sources": ["../../../app/routes/profile.edit.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\profile.edit.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\profile.edit.tsx\");\n  import.meta.hot.lastModified = \"1750965227006.3364\";\n}\n// REMIX HMR END\n\n// app/routes/profile.edit.tsx\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { getSession } from \"~/utils/session.server\";\nimport { getCurrentUser, updateUserProfile } from \"~/utils/auth.server\";\nconst skillsOptions = [\"Marketing\", \"UI/UX\", \"Product Design\", \"Software Development\", \"Business Strategy\", \"Finance\", \"Leadership\"];\nexport const loader = async ({\n  request\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  const user = await getCurrentUser(email);\n  if (!user) return redirect(\"/login\");\n  return json({\n    user\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const session = await getSession(request);\n  const email = session.get(\"email\");\n  if (!email) return redirect(\"/login\");\n  const formData = await request.formData();\n  const profileData = {\n    name: formData.get(\"name\"),\n    bio: formData.get(\"bio\"),\n    skills: formData.getAll(\"skills\"),\n    goals: formData.get(\"goals\").split(\",\").map(g => g.trim())\n  };\n  await updateUserProfile(email, profileData);\n  return redirect(\"/dashboard\");\n};\nexport default function EditProfile() {\n  _s();\n  const {\n    user\n  } = useLoaderData();\n  return <div className=\"flex min-h-screen bg-gray-100\">\r\n      {/* Sidebar - similar to dashboard */}\r\n      <aside className=\"w-60 bg-purple-700 text-white flex flex-col p-4\">\r\n        {/* ... same sidebar as dashboard ... */}\r\n      </aside>\r\n\r\n      {/* Main content */}\r\n      <main className=\"flex-1 p-6\">\r\n        <h1 className=\"text-xl font-semibold mb-6 text-purple-800\">EDIT PROFILE</h1>\r\n        \r\n        <Form method=\"post\" className=\"bg-white rounded-lg p-6 shadow\">\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 mb-2\" htmlFor=\"name\">\r\n              Full Name\r\n            </label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" defaultValue={user.name} className=\"w-full p-2 border rounded\" required />\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 mb-2\" htmlFor=\"bio\">\r\n              Bio\r\n            </label>\r\n            <textarea id=\"bio\" name=\"bio\" defaultValue={user.bio} className=\"w-full p-2 border rounded\" rows={3} required />\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 mb-2\">\r\n              Skills\r\n            </label>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              {skillsOptions.map(skill => <div key={skill} className=\"flex items-center\">\r\n                  <input type=\"checkbox\" id={`skill-${skill}`} name=\"skills\" value={skill} defaultChecked={user.skills?.includes(skill)} className=\"mr-2\" />\r\n                  <label htmlFor={`skill-${skill}`}>{skill}</label>\r\n                </div>)}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 mb-2\" htmlFor=\"goals\">\r\n              Goals (comma separated)\r\n            </label>\r\n            <textarea id=\"goals\" name=\"goals\" defaultValue={user.goals?.join(\", \")} className=\"w-full p-2 border rounded\" rows={2} required />\r\n            <p className=\"text-sm text-gray-500 mt-1\">Example: Improve product design skills, Learn marketing strategies</p>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end\">\r\n            <button type=\"submit\" className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\">\r\n              Save Profile\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </main>\r\n    </div>;\n}\n_s(EditProfile, \"FpjQZylbefWQChk+MjGNfSb2jDo=\", false, function () {\n  return [useLoaderData];\n});\n_c = EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAA+B;AAE/B,qBAA2B;AAC3B,kBAAkD;AAqC5C;AA7DN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,wCAA0C,EAAE;AAAA,EACrF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+B;AAC/B,cAAY,IAAI,eAAe;AACjC;AAQA,IAAM,gBAAgB,CAAC,aAAa,SAAS,kBAAkB,wBAAwB,qBAAqB,WAAW,YAAY;AA6BpH,SAAR,cAA+B;AACpC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,iCAElB;AAAA,uDAAC,WAAM,WAAU,qDAAjB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAGA,mDAAC,UAAK,WAAU,cACd;AAAA,yDAAC,QAAG,WAAU,8CAA6C,4BAA3D;AAAA;AAAA;AAAA;AAAA,aAAuE;AAAA,MAEvE,mDAAC,QAAK,QAAO,QAAO,WAAU,kCAC5B;AAAA,2DAAC,SAAI,WAAU,QACb;AAAA,6DAAC,WAAM,WAAU,4BAA2B,SAAQ,QAAO,yBAA3D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,WAAM,MAAK,QAAO,IAAG,QAAO,MAAK,QAAO,cAAc,KAAK,MAAM,WAAU,6BAA4B,UAAQ,QAAhH;AAAA;AAAA;AAAA;AAAA,iBAAiH;AAAA,aAJnH;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QAEA,mDAAC,SAAI,WAAU,QACb;AAAA,6DAAC,WAAM,WAAU,4BAA2B,SAAQ,OAAM,mBAA1D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,cAAS,IAAG,OAAM,MAAK,OAAM,cAAc,KAAK,KAAK,WAAU,6BAA4B,MAAM,GAAG,UAAQ,QAA7G;AAAA;AAAA;AAAA;AAAA,iBAA8G;AAAA,aAJhH;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QAEA,mDAAC,SAAI,WAAU,QACb;AAAA,6DAAC,WAAM,WAAU,4BAA2B,sBAA5C;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,SAAI,WAAU,0BACZ,wBAAc,IAAI,WAAS,mDAAC,SAAgB,WAAU,qBACnD;AAAA,+DAAC,WAAM,MAAK,YAAW,IAAI,SAAS,SAAS,MAAK,UAAS,OAAO,OAAO,gBAAgB,KAAK,QAAQ,SAAS,KAAK,GAAG,WAAU,UAAjI;AAAA;AAAA;AAAA;AAAA,mBAAwI;AAAA,YACxI,mDAAC,WAAM,SAAS,SAAS,SAAU,mBAAnC;AAAA;AAAA;AAAA;AAAA,mBAAyC;AAAA,eAFP,OAAV;AAAA;AAAA;AAAA;AAAA,iBAG1B,CAAM,KAJV;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QAEA,mDAAC,SAAI,WAAU,QACb;AAAA,6DAAC,WAAM,WAAU,4BAA2B,SAAQ,SAAQ,uCAA5D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,cAAS,IAAG,SAAQ,MAAK,SAAQ,cAAc,KAAK,OAAO,KAAK,IAAI,GAAG,WAAU,6BAA4B,MAAM,GAAG,UAAQ,QAA/H;AAAA;AAAA;AAAA;AAAA,iBAAgI;AAAA,UAChI,mDAAC,OAAE,WAAU,8BAA6B,kFAA1C;AAAA;AAAA;AAAA;AAAA,iBAA4G;AAAA,aAL9G;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,QAEA,mDAAC,SAAI,WAAU,oBACb,6DAAC,YAAO,MAAK,UAAS,WAAU,kEAAiE,4BAAjG;AAAA;AAAA;AAAA;AAAA,eAEA,KAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,WAvCF;AAAA;AAAA;AAAA;AAAA,aAwCA;AAAA,SA3CF;AAAA;AAAA;AAAA;AAAA,WA4CA;AAAA,OAnDG;AAAA;AAAA;AAAA;AAAA,SAoDL;AACJ;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
